import React from 'react';

function Osi() {
  return (
    <div className="EthernetKomutesana">
      <h1>7.Ethernet komutēšana (switching).</h1>
      <p dir="ltr" style={{lineHeight: '1.2', textAlign: 'justify', marginTop: '0pt', marginBottom: '0pt'}}><span style={{fontSize: '12pt', fontFamily: 'Calibri,sans-serif', color: '#000000', backgroundColor: 'transparent', fontWeight: 400, fontStyle: 'normal', fontVariant: 'normal', textDecoration: 'none', verticalAlign: 'baseline', whiteSpace: 'pre-wrap'}}>Komutators būtībā ir vairāku portu tilts. Tas var saturēt desmitiem portu, tātad dalīt tīklu desmitiem&nbsp;</span><span style={{fontSize: '12pt', fontFamily: 'Calibri,sans-serif', color: '#000000', backgroundColor: 'transparent', fontWeight: 700, fontStyle: 'normal', fontVariant: 'normal', textDecoration: 'none', verticalAlign: 'baseline', whiteSpace: 'pre-wrap'}}>kolīziju domēnos.</span><span style={{fontSize: '12pt', fontFamily: 'Calibri,sans-serif', color: '#000000', backgroundColor: 'transparent', fontWeight: 400, fontStyle: 'normal', fontVariant: 'normal', textDecoration: 'none', verticalAlign: 'baseline', whiteSpace: 'pre-wrap'}}>&nbsp;Ja katru datoru pievieno vienam komutatora portam, tad katrā kolīziju domēnā ir tikai&nbsp;</span><span style={{fontSize: '12pt', fontFamily: 'Calibri,sans-serif', color: '#000000', backgroundColor: 'transparent', fontWeight: 700, fontStyle: 'normal', fontVariant: 'normal', textDecoration: 'none', verticalAlign: 'baseline', whiteSpace: 'pre-wrap'}}>divas ierīces:</span><span style={{fontSize: '12pt', fontFamily: 'Calibri,sans-serif', color: '#000000', backgroundColor: 'transparent', fontWeight: 400, fontStyle: 'normal', fontVariant: 'normal', textDecoration: 'none', verticalAlign: 'baseline', whiteSpace: 'pre-wrap'}}>&nbsp;dators un komutators, kas savienoti ar vienu kabeli. Šos mazos kolīziju domēnus mēdz saukt par mikrosegmentiem. Ja savienošanai tiek izmantots vītā pāra kabelis, tad parādās vēl viena lieliska iespēja. Vītā pāra kabeļos viens dzīslu pāris tiek izmantots sūtīšanai, cits saņemšanai. Ir ierīces, kas spēj izmantot abus pārus vienlaicīgi, t.i., sūtīt un saņemt vienā un tajā pašā laikā. Šo iespēju sauc par pilndupleksa (full duplex) režīmu. Lielākā daļa komutatoru un tīkla karšu spēj strādāt šinī režīmā.&nbsp;</span></p>
        <p dir="ltr" style={{lineHeight: '1.2', textAlign: 'justify', marginTop: '0pt', marginBottom: '0pt'}}><span style={{fontSize: '12pt', fontFamily: 'Calibri,sans-serif', color: '#000000', backgroundColor: 'transparent', fontWeight: 400, fontStyle: 'normal', fontVariant: 'normal', textDecoration: 'none', verticalAlign: 'baseline', whiteSpace: 'pre-wrap'}}>Plašai jaudīgu komutatoru pieejamībai stipri palīdzēja sekojošas divas tehnoloģijas. Pēc satura adresējamā atmiņa (content-addressable memory, CAM) ļauj nolasīt noteiktu atmiņas šūnu saskaņā ar adresēšanas shēmu, kas pretēja parastās atmiņas shēmai. Kad informāciju ieraksta CAM atmiņā, tā uzrāda tai piekārtoto adresi. Tas ļauj komutatoram atrast savā tabulā MAC adresei atbilstošo porta numuru bez meklēšanas algoritmiem. Atmiņa pati to zibenīgi uzrāda.</span></p>
        <p dir="ltr" style={{lineHeight: '1.2', textAlign: 'justify', marginTop: '0pt', marginBottom: '0pt'}}><span style={{fontSize: '12pt', fontFamily: 'Calibri,sans-serif', color: '#000000', backgroundColor: 'transparent', fontWeight: 400, fontStyle: 'normal', fontVariant: 'normal', textDecoration: 'none', verticalAlign: 'baseline', whiteSpace: 'pre-wrap'}}>Lietojumu specifiskās integrālās shēmas (application-specific integrated circuit, ASIC) ir integrālās shēmas, kas pielāgotas noteiktiem lietojumiem, nevis vispārīgai lietošanai. Parasti tie ir specializēti procesori, kuros iebūvētas specifiskas funkcijas. Ar to palīdzību visas komutatoru darbības veic aparātiski, nevis programmatūrā, ievērojami samazinot aiztures un palielinot ierīces caurlaides spēju</span></p>
    </div>
  );
}

export default Osi;
